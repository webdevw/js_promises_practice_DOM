{"version":3,"sources":["scripts/main.js"],"names":["textResolved1","textRejected1","textResolved2","textResolved3","createDiv","type","message","div","document","createElement","className","setAttribute","textContent","body","append","waitForClick","action","Promise","resolve","addEventListener","createPromise2","e","createPromise1","reject","setTimeout","leftClick","rightClick","promise1","promise2","promise3","all","then","result","catch","error"],"mappings":";AAAA,aAEA,IAAMA,EAAgB,6BAChBC,EAAgB,6BAChBC,EAAgB,8BAChBC,EAAgB,6BAEtB,SAASC,EAAUC,EAAMC,GACjBC,IAAAA,EAAMC,SAASC,cAAc,OAEnCF,EAAIG,UAAYL,EAChBE,EAAII,aAAa,UAAW,gBAC5BJ,EAAIK,YAAcN,EAClBE,SAASK,KAAKC,OAAOP,GAGvB,SAASQ,EAAaC,GACb,OAAA,IAAIC,QAAQ,SAACC,GAClBV,SAASW,iBAAiBH,EAAQ,WAChCE,QAKN,SAASE,IAWA,OAAA,IAAIH,QAVM,SAACC,GAChBV,SAASW,iBAAiB,QAAS,SAACE,GAClCH,EAAQhB,KAGVM,SAASW,iBAAiB,cAAe,SAACE,GACxCH,EAAQhB,OAOd,SAASoB,IAaA,OAAA,IAAIL,QAZM,SAACC,EAASK,GACzBf,SAASW,iBAAiB,QAAS,WACjCD,EAAQlB,KAGVQ,SAASW,iBAAiB,mBAAoB,WAC5CK,WAAW,WACTD,EAAOtB,IACN,SAOT,IAAMwB,EAAYV,EAAa,SACzBW,EAAaX,EAAa,eAC1BY,EAAWL,IACXM,EAAWR,IACXS,EAAWZ,QAAQa,IAAI,CAACL,EAAWC,IAEzCC,EACGI,KAAK,SAACC,GACL5B,EAAU,UAAW4B,KAEtBC,MAAM,SAACC,GACN9B,EAAU,UAAW8B,KAGzBN,EACGG,KAAK,SAACC,GACL5B,EAAU,UAAW4B,KAGzBH,EACGE,KAAK,WACJ3B,EAAU,UAAWD","file":"main.c9aadeb7.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst textResolved1 = 'First promise was resolved';\nconst textRejected1 = 'First promise was rejected';\nconst textResolved2 = 'Second promise was resolved';\nconst textResolved3 = 'Third promise was resolved';\n\nfunction createDiv(type, message) {\n  const div = document.createElement('div');\n\n  div.className = type;\n  div.setAttribute('data-qa', 'notification');\n  div.textContent = message;\n  document.body.append(div);\n};\n\nfunction waitForClick(action) {\n  return new Promise((resolve) => {\n    document.addEventListener(action, () => {\n      resolve();\n    });\n  });\n}\n\nfunction createPromise2() {\n  const resolver = (resolve) => {\n    document.addEventListener('click', (e) => {\n      resolve(textResolved2);\n    });\n\n    document.addEventListener('contextmenu', (e) => {\n      resolve(textResolved2);\n    });\n  };\n\n  return new Promise(resolver);\n}\n\nfunction createPromise1() {\n  const resolver = (resolve, reject) => {\n    document.addEventListener('click', () => {\n      resolve(textResolved1);\n    });\n\n    document.addEventListener('DOMContentLoaded', () => {\n      setTimeout(() => {\n        reject(textRejected1);\n      }, 3000);\n    });\n  };\n\n  return new Promise(resolver);\n}\n\nconst leftClick = waitForClick('click');\nconst rightClick = waitForClick('contextmenu');\nconst promise1 = createPromise1();\nconst promise2 = createPromise2();\nconst promise3 = Promise.all([leftClick, rightClick]);\n\npromise1\n  .then((result) => {\n    createDiv('success', result);\n  })\n  .catch((error) => {\n    createDiv('warning', error);\n  });\n\npromise2\n  .then((result) => {\n    createDiv('success', result);\n  });\n\npromise3\n  .then(() => {\n    createDiv('success', textResolved3);\n  });\n"]}